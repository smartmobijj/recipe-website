<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recipe Explorer</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body onload="loadContinents()">
    <div class="container">
        <h1 class="recipe-title">Discover Recipes</h1>
        <br>
        <div class="home-link">
           
<div id="myNav" class="sidebar">
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">√ó</a>
  <div class="overlay-content">
    <a href="/about">About</a>
    <a href="/select-ingredients">Create Your Own Meal</a>
    <a href="/selected-recipes">View Selected</a>
  </div>
</div>


    <div class="nav-icon" onclick="openNav()">
        <div class="bar1"></div>
        <div class="bar2"></div>
        <div class="bar3"></div>
    </div>
  
        </div>


        <!-- üîç Search Bar -->
        <input type="text" id="search" placeholder="Search for a recipe..." oninput="searchRecipes()">
        <div id="search-results-container" class="recipe-grid"></div>

        <!-- üåç Dropdown for Continent & Country Selection -->
        <select id="continent-select" onchange="loadCountries()">
            <option value="">Select Continent</option>
        </select>

        <select id="country-select" disabled>
            <option value="">Select Country</option>
        </select>

        <button onclick="filterRecipes()">Find Recipes</button>

        <!-- ‚úÖ "Create Your Own Meal" Button -->
        <a href="/select-ingredients"><button>üîç Create Your Own Meal</button></a>

        <!-- ‚úÖ "About Us" Button -->
        <a href="/about"><button>üìñ About Us</button></a>


        <!-- ‚úÖ "Our Random Ten Recipes" Section -->
        <section class="random-recipes">
            <h2 class="recipe-title">üçΩÔ∏è Our Random Ten Recipes</h2>
            <div class="recipe-grid">
                <% if (recipes.length > 0) { %>
                    <% recipes.forEach(recipe => { %>
                        <div class="recipe-card">
                            <div class="image-container">
                                <input type="checkbox" class="select-recipe"
                                    data-recipe="<%= JSON.stringify({
                                      title: recipe.title,
                                      image: recipe.image,
                                      url: recipe.url,
                                      filename: recipe.filename
                                    }) %>" />
                                <a href="<%= recipe.url %>">
                                    <img src="<%= recipe.image %>" alt="<%= recipe.title %>" onerror="this.src='/recipes429/images/default.jpg'">
                                </a>
                            </div>
                            <h3 class="recipe-title"><%= recipe.title %></h3>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p>No recipes available.</p>
                <% } %>
            </div>            
        </section>
    </div>

    <script>
function openNav() {
  document.getElementById("myNav").style.width = "300px"; // or 250px
}

function closeNav() {
  document.getElementById("myNav").style.width = "0";
}

function xchanger(x) {
  //x.classList.toggle("change");
  openNav(); // open from left
}

        async function loadContinents() {
            try {
                const response = await fetch('/getContinents');
                const continents = await response.json();
                const continentSelect = document.getElementById('continent-select');

                continentSelect.innerHTML = '<option value="">Select Continent</option>';
                continents.forEach(continent => {
                    const option = document.createElement('option');
                    option.value = continent;
                    option.textContent = continent;
                    continentSelect.appendChild(option);
                });
            } catch (error) {
                console.error("‚ùå Error loading continents:", error);
            }
        }

        window.addEventListener('DOMContentLoaded', () => {
    const continentSelect = document.getElementById('continent-select');
    const countrySelect = document.getElementById('country-select');

    continentSelect.addEventListener('change', async () => {
        const continent = continentSelect.value;

        if (!continent) {
            countrySelect.innerHTML = '<option value="">Select Country</option>';
            countrySelect.disabled = true;
            return;
        }

        try {
            console.log("üåç Selected continent:", continent);
            const response = await fetch(`/getCountries?continent=${encodeURIComponent(continent)}`);

            if (!response.ok) {
                throw new Error(`Server responded with ${response.status}`);
            }

            const countries = await response.json();
            console.log(`üó∫Ô∏è Countries for ${continent}:`, countries);

            countrySelect.innerHTML = '<option value="">Select Country</option>';

            if (countries.length === 0) {
                alert(`No countries found for continent: ${continent}`);
                countrySelect.disabled = true;
                return;
            }

            countries.forEach(country => {
                const option = document.createElement('option');
                option.value = country;
                option.textContent = country;
                countrySelect.appendChild(option);
            });

            countrySelect.disabled = false;

        } catch (error) {
            console.error("‚ùå Error loading countries:", error);
            alert("Failed to load countries. Please try again.");
        }
    });
});


        // ‚úÖ Redirect to filtered recipe results
        function filterRecipes() {
            const continent = document.getElementById('continent-select').value;
            const country = document.getElementById('country-select').value;

            if (!continent || !country) {
                alert("Please select a continent and a country.");
                return;
            }

            window.location.href = `/recipes/${encodeURIComponent(continent)}/${encodeURIComponent(country)}`;
        }

// ‚úÖ Fetch and Display Search Results
async function searchRecipes() {
    const query = document.getElementById('search').value.trim();
    const resultsContainer = document.getElementById('search-results-container');
    resultsContainer.innerHTML = '';

    if (!query) return;

    const response = await fetch('/search?query=' + encodeURIComponent(query));
    const recipes = await response.json();

    if (recipes.length === 0) {
        resultsContainer.innerHTML = '<p>No recipes found.</p>';
        return;
    }

    const grid = document.createElement('div');
    grid.className = 'recipe-grid';

    recipes.forEach(recipe => {
        const card = document.createElement('div');
        card.className = 'recipe-card';
        card.innerHTML = `
            <div class="image-container">
                <input type="checkbox" class="select-recipe"
                    data-recipe='${JSON.stringify({
                        title: recipe.title,
                        image: recipe.image,
                        url: recipe.url,
                        filename: recipe.filename
                    })}' />
                <a href="${recipe.url}">
                    <img src="${recipe.image}" alt="${recipe.title}" onerror="this.src='/recipes429/images/default.jpg'">
                </a>
            </div>
            <h3 class="recipe-title">${recipe.title}</h3>
        `;
        grid.appendChild(card);
    });

    resultsContainer.appendChild(grid);

    // ‚úÖ Reattach checkbox handlers
    const selectedRecipesKey = 'selectedRecipes';

    document.querySelectorAll('.select-recipe').forEach(box => {
        const recipe = JSON.parse(box.dataset.recipe);
        let selected = JSON.parse(sessionStorage.getItem(selectedRecipesKey) || '[]');

        // ‚úÖ Pre-check if already selected
        if (selected.some(r => r.filename === recipe.filename)) {
            box.checked = true;
        }

        box.addEventListener('change', () => {
            selected = JSON.parse(sessionStorage.getItem(selectedRecipesKey) || '[]');

            if (box.checked) {
                if (!selected.some(r => r.filename === recipe.filename)) {
                    selected.push(recipe);
                }
            } else {
                selected = selected.filter(r => r.filename !== recipe.filename);
            }

            sessionStorage.setItem(selectedRecipesKey, JSON.stringify(selected));
            const countElement = document.getElementById('selected-count');
            if (countElement) countElement.textContent = selected.length;
        });
    });
}

        
    </script>



<!-- ‚úÖ "Team Members' Favorite Dishes" Section -->
<details>
    <summary class="dropdown-title">üë©‚Äçüç≥ Team Members' Favorite Dishes</summary>
    <section class="team-favorites">
      <div class="recipe-grid">
        <% if (typeof teamFavorites !== "undefined" && teamFavorites.length > 0) { %>
            <% teamFavorites.forEach(recipe => { %>
                <div class="recipe-card">
                    <div class="image-container">
                        <input type="checkbox" class="select-recipe"
                            data-recipe="<%= JSON.stringify({
                              title: recipe.title,
                              image: recipe.image,
                              url: recipe.url,
                              filename: recipe.filename
                            }) %>" />
                        <a href="<%= recipe.url %>">
                            <img src="<%= recipe.image %>" alt="<%= recipe.title %>" onerror="this.src='/recipes429/images/default.jpg'">
                        </a>
                    </div>
                    <h3 class="recipe-title"><%= recipe.title %></h3>
                </div>
            <% }) %>
        <% } else { %>
            <p>No team favorite recipes available.</p>
        <% } %>
      </div>
    </section>
  </details>
  

<!-- ‚úÖ "Top 10 Easy Recipes" Section -->
<details>
    <summary class="dropdown-title">üåü Top 10 Easy Recipes</summary>
    <section class="easy-recipes">
      <div class="recipe-grid">
        <% if (easyRecipes && easyRecipes.length > 0) { %>
            <% easyRecipes.forEach(recipe => { %>
                <div class="recipe-card">
                    <div class="image-container">
                        <input type="checkbox" class="select-recipe"
                        data-recipe="<%= JSON.stringify({
                          title: recipe.title,
                          image: recipe.image,
                          url: recipe.url,
                          filename: recipe.filename
                        }) %>" />
                        <a href="<%= recipe.url %>">
                            <img src="<%= recipe.image %>" alt="<%= recipe.title %>" />
                        </a>
                    </div>
                    <h3 class="recipe-title"><%= recipe.title %></h3>
                </div>
            <% }) %>
        <% } else { %>
            <p>No easy recipes available.</p>
        <% } %>
      </div>
    </section>
  </details>
  

<script>
    const serverSessionID = "<%= serverSessionID %>";
    // Check for serverSessionID mismatch
    const lastServerSession = sessionStorage.getItem('lastServerSession');
    if (lastServerSession !== serverSessionID) {
        console.log("üîÅ Server restarted ‚Äî clearing selection cache.");
        sessionStorage.removeItem('selectedRecipes');
        sessionStorage.setItem('lastServerSession', serverSessionID);
    }

    function goToSelectedPage() {
        window.location.href = '/selected-recipes';
      }


    window.addEventListener('DOMContentLoaded', () => {
      const selectedRecipesKey = 'selectedRecipes';
    
      function updateSelectedCount() {
        const selected = JSON.parse(sessionStorage.getItem(selectedRecipesKey) || '[]');
        const countElement = document.getElementById('selected-count');
        if (countElement) {
          countElement.textContent = selected.length;
        }
        console.log("üì¶ Currently selected recipes:", selected);
      }
        
      document.querySelectorAll('.select-recipe').forEach((box, index) => {
        const recipe = JSON.parse(box.dataset.recipe);
        
        console.log(`üü° Checkbox #${index} initialized for [${recipe.title}] (${recipe.filename})`);
    
        let selected = JSON.parse(sessionStorage.getItem(selectedRecipesKey) || '[]');
    
        if (selected.some(r => r.filename === recipe.filename)) {
          box.checked = true;
          console.log(`‚úÖ Pre-checking box: ${recipe.filename}`);
        }
    
        box.addEventListener('change', () => {
          selected = JSON.parse(sessionStorage.getItem(selectedRecipesKey) || '[]');
    
          console.log(`üñ±Ô∏è Checkbox toggled for ${recipe.filename}. Checked: ${box.checked}`);
    
          if (box.checked) {
            if (!selected.some(r => r.filename === recipe.filename)) {
              selected.push(recipe);
              console.log(`‚ûï Added ${recipe.filename}`);
            }
          } else {
            selected = selected.filter(r => r.filename !== recipe.filename);
            console.log(`‚ûñ Removed ${recipe.filename}`);
          }
    
          sessionStorage.setItem(selectedRecipesKey, JSON.stringify(selected));
          updateSelectedCount();
        });
      });
    
      updateSelectedCount();
    });
</script>
    
    
    


<button onclick="sessionStorage.removeItem('selectedRecipes'); location.reload();">
    üóëÔ∏è Clear Selected Recipes
</button>

<!-- Floating View Selected Button -->
<div id="selected-recipes-float" style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;">
    <button onclick="goToSelectedPage()">üß∫ View Selected (<span id="selected-count">0</span>)</button>
</div>

</body>
</html>
